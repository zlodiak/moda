ѕј–—≈– »Ќ“≈–Ќ≈“-ћј√ј«»Ќј http://en.modagram.com/

.создать конфиг, в котором будет коренвой адрес сайта, формат результата и т.д

.подготовить каталог дл€ данных 'data'
	.проверить существует ли каталог
		ƒјЌќ: data_catalog_name
		ѕќЋ”„»“№: каталог не существует - false. существует - true
		NAME: check_catalog_exists()	

.получить набор страниц дл€ каждого товара
	.получить набор ссылок на первые страницы каждой категории
		ƒјЌќ: корневой url
		ѕќЋ”„»“№: набор url в виде списка categories_urls
		NAME: get_categories_urls()
		
	.получить набор ссылок дл€ страниц каждой категории
		ƒјЌќ: categories_urls
		ѕќЋ”„»“№: набор url дл€ всех страниц с товарами в виде списка goods_pages_urls
		NAME: get_goods_pages_urls()
		
	.получить набор ссылок на конкретные страницы товара
		ƒјЌќ: goods_pages_urls
		ѕќЋ”„»“№: набор url дл€ страниц конкретных товаров в виде списка goods_urls
		NAME: get_goods_urls()	

.пропарсить каждую страницу и сохранить данные в соответствующем каталоге
	.собрать данные дл€ каждого товара(название, цена, адреса всех картинок в web, цвет и т.д.)
		ƒјЌќ: goods_urls
		ѕќЋ”„»“№: словарь goods_data_dict с данными дл€ каждого товара(1-ый индекс), который содержит сами данные(2-ой индекс):
																												title,
																												price,
																												color,
																												urls images,
																												size,
																												desc
		NAME: get_goods_data_dict()		
	
	.прогнать данные из предыдущего пункта церез цикл при этом создава€ соответствующий каталог, скачива€ картинки в него и помеща€ файл с данными товара в него же(дублирующие данные перезаписываютс€!)
		ƒјЌќ: goods_data_dict
		ѕќЋ”„»“№: создать дерево каталогов, одновременно скачива€ в него изображени€ и создава€ текстовый файл в каждом каталоге, содержащий информацию о товаре. использовать отлов ошибок по максимуму. названи€ проблемных товаров заносить в отдельный словарь goods_broken
		NAME: create_info_tree()
		
.пропарсить каталоги и создать результирующий csv, xsl, xml файл
	.просканировать дерево каталогов 'data' и на основе этого сформировать результирующий файл(в файле будут данные и адреса на скачанные картинки)
		ƒјЌќ: goods_broken
		ѕќЋ”„»“№: сканировать дерево каталогов и на основе этого создать результирующий файл в заданном к вонфиге формате
		NAME: get_result_data()	













.пропарсить страницы выдачи
	.отправить данные конфига глвной стрнице поиска
		ƒјЌќ: конфиг
		ѕќЋ”„»“№: html первой страницы поиска
		NAME: get_search_firstpage
	
	.получить набор страниц в виде списка
		.написать функцию проверки количества страниц в зависимости от типа пагинаци
			ƒјЌќ: html первой страницы поиска
			ѕќЋ”„»“№: один из трЄх вариантов пагинации(одна страница, меньше 4 страниц, больше 4 страниц)
			NAME: get_pagination_type()
			
		.написать 3 функции дл€ заполнени€ списка страниц
			ƒјЌќ: номер варианта пагинации
			ѕќЋ”„»“№: ссылки на все страницы выдачи поиска в виде списка	
			NAME: get_pages_links_no_pagination()
			
			ƒјЌќ: номер варианта пагинации
			ѕќЋ”„»“№: ссылки на все страницы выдачи поиска в виде списка				
			NAME: get_pages_links_full_pagination()
			
			ƒјЌќ: номер варианта пагинации
			ѕќЋ”„»“№: ссылки на все страницы выдачи поиска в виде списка				
			NAME: get_pages_links_little_pagination()
			
	.через цикл сформировать многомерный словарь с: названием темы, названием раздела, датой, номером страницы
		ƒјЌќ: список с адресами страниц
		ѕќЋ”„»“№: словарь с данными, полученными средствами xpath
		NAME: get_dict_data()
	
.построить xml-дерево
	ƒјЌќ:	словарь с данными
	ѕќЋ”„»“№: объект xml-дерева
	NAME: construct_xml

.записать xml в файл
	ƒјЌќ: объект xml-дерева
	ѕќЋ”„»“№: записать файл в текущий каталог
	NAME: record_xml_to_file()
